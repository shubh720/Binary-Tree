#include <bits/stdc++.h>
using namespace std;
string s1 = "true", s2="t";

struct node{
 int data;
 node* left;
 node* right;

    node(int data){
       this -> data = data;
       left = right = NULL;
    }
};

node* createTree(node* root){
 int data;
 cin >> data;
 root = new node(data);
 string s;
 cin >> s;
    
    if(s.compare(s1) == 0 || s.compare(s2) == 0)
        root -> left = createTree(root);
 cin >> s;

    if(s.compare(s1) == 0 || s.compare(s2) == 0)
        root -> right = createTree(root);
       
  return root;
}

void siblings(node* root,vector<int> &v){
   if(root == NULL) return;
   
 // case 1.
   if(root->left != NULL && root->right == NULL){
       v.push_back(root->left->data);
       siblings(root->left,v);
   } 
   else if (root->left == NULL && root->right != NULL){
       v.push_back(root->right->data);
       siblings(root->right,v);
   }else{
       siblings(root->left,v);
       siblings(root->right,v);
   } 
  return; 
}

void print(node* root){
  if(root == NULL) return;

 cout<< root->data <<" ";
 print(root->left);
 print(root->right);
  return;
}

int main(){

node* root = NULL;
root = createTree(root);
vector<int> v;
//print(root);
siblings(root,v);
  
  for(int i=0;i<v.size();i++) cout<< v[i] <<" ";

  return 0; 
}
